apply plugin: 'spring-boot'

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/countries.xsd"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}

configurations {
    jaxb
}

jar {
    baseName = 'javault-ws'
    version =  '0.1.0'
    from genJaxb.classesDir
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "ch.qos.logback", module:"logback-classic"
        exclude group: "org.slf4j", module: "log4j-over-slf4j"
    }

    compile("org.springframework.boot:spring-boot-starter-ws") {
        exclude group: "ch.qos.logback", module:"logback-classic"
        exclude group: "org.slf4j", module: "log4j-over-slf4j"
    }

    compile("wsdl4j:wsdl4j:1.6.1")

    jaxb("com.sun.xml.bind:jaxb-xjc:2.2.4-1")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))

    testCompile("org.springframework.boot:spring-boot-starter-test")

}

